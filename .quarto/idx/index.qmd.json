{"title":"<p>![](style/mgmss_brand_color.png){width=40px}</p>\nPlan für Informatik in Stufe 9","markdown":{"yaml":{"title":"<p>![](style/mgmss_brand_color.png){width=40px}</p>\nPlan für Informatik in Stufe 9\n","subtitle":"Einführung mit Aufgaben <br>\n<br>\nEinführung: 2025-08-25 <br>\nAbgabetermin: 2025-09-15 (Doppelrohr bei Nichteinreichen am Termin)\n","date":"2025-08-26","date-modified":"2025-08-26","author":"Călin Drăgan","lang":"de","abstract":"Hier bekommst Du eine Übersicht über die fachlichen und praktischen Arbeiten, die in Informatik in Stufe 9 geplant sind. Die anschliessenden Aufgaben helfen Dir, Dich an einige Fachbegriffe anzunähern.","title-block-banner":true,"format":{"html":{"toc":true,"toc-depth":5,"toc-location":"right","appendix-style":"default","callout-appearance":"default","callout-icon":false}},"engine":"knitr","brand":"style/_brand.yml","filters":["highlight-text"],"css":"style/style.css"},"headingText":"Was ist Informatik?","containsRefs":false,"markdown":"\n\n\nDie Informatik beschäftigt sich mit Fragestellungen und Lösungen rund um Information, Daten, und Berechenbarkeit als auch mit deren Konzeption, Bau, Implementierung und Anwendung in und als **Computer** und **Computersystemen**. Vor der Erfindung des digitalen Computers, waren Computer für Jahrhunderte meistens als Frauen bekannt, die mathematische Berechnungen ausführten. \n\n::: {#fig-women-computers}\n\n![](img/women_computers.jpg)\n\nVor der Markteinführung von kommerziell erhältlichen digitalen Computern, waren hauptsächlich Frauen damit beschäftigt, mehr oder weniger komplexe mathematische Berechnungen auszuführen. Diese Frauen haben durch ihre Arbeit maßgeblich zu vielen Errungenschaften beigetragen.\n:::\n\n### Gebiete der Informatik \n\nDas Fach Informatik deckt viele und teilweise sehr unterschiedliche Gebiete ab. Wir werden nicht ins Detail gehen aber eine Übersicht kann nie schaden. Um die verschiedenen Gebiete und deren Bedeutung zu verdeutlichen, werden wir die Umsetzung eines Muffinrezeptes als Beispiel verwenden. Dazu verwenden wir abgesetzte klappbare Textblöcke wie den folgenden, in dem die Anwendung von Fachbegriffen anhand des Rezeptes und der dazugehörigen Prozessen verdeutlicht wird. Die Erklärung wird durch Ausklappen sichtbar. \n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Verstehe etwas durch das Muffinrezept und klapp mich auf!\" collapse=\"true\"}\nHier wirst Du immer eine Erklärung zu Fachbegriffen vorfinden, die sich auf das Muffinbacken bezieht. Wir fangen gleich damit an. Das Muffinrezept ist nämlich ein Computerprogramm, die Küche ein Computer und Du bist der Koch. Was Du bist wird in einem späteren Textblock klar. \n:::\n\n### Grundlagen\n\nInformatik ist in weiten Teilen angewandte **Mathematik**. Deshalb sind mathematische Grundlagen wie Logik, Zahlentheorie, Graphentheorie, und andere Gebiete wichtige Bausteine. Auf ihnen werden **Algorithmen** und **Datenstrukturen** aufgebaut. Dies sind die Grundelemente der Berechenbarkeit. \n\n::: {#fig-khwarizmi}\n![](img/khwarizmi_algebra.jpg){width=30%}\n\nDas Wort *Algorithmus* ist von dem Namen des persischen Mathematikers Muḥammad ibn Mūsā al-Khwārizmī, محمد بن موسى الخوارزميّ‎, * ~780 † ~830, abgeleitet. Er hat die ersten algebraischen Rechenvorschriften in das indische Zahlensystem übertragen und beschrieben. Gezeigt ist hier eine Seite aus seinem Algebrawerk.\n:::\n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Datenstrukturen (was kommt rein?) und Algorithmen (wie machen wir es?) mit Muffins\" collapse=\"true\"}\nDas Computerprogramm besteht aus der Datenstruktur Zutaten (engl. *ingridients*) und dem Algorithmus Zubereitung (engl. *instructions*). Wir brauchen beide Elemente, damit wir *diese* Muffins herstellen können.\n\n::: {layout-ncol=2}\n![](img/muffin_data.png){width=50%}\n\n![](img/muffin_algorithm.png){width=50%}\n:::\n:::\n\n### Grundbausteine\n\nDie **Theorien von Berechenbarkeit** ermitteln inwiefern Algorithmen bestimmte Probleme lösen können. Dabei wird die Lösungsgenauigkeit und die Effizienz der Algorithmen untersucht. \n\n::: {#fig-turing}\n![](img/alan_turing_header.jpg){width=30%}\n\nAlan Turing, * 1912 † 1954, war ein englischer Mathematiker, der sich als Erster über Berechenbarkeit Gedanken gemacht hat. Er hat dann ein Berechnungssystem erfunden, dass der Funktionsweise des modernen Computers entspricht.\n:::\n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Berechenbarkeit (können wir es machen?), Lösungsgenauigkeit (wie gut wird es?) und Effizienz (wie schnell wird es fertig und wie viel Energie stecken wir rein?) beim Muffinbacken\" collapse=\"true\"}\nBei der Berechenbarkeit mithilfe unseres Computerprogramms, dem Muffinrezept, kann man erfragen, ob es nur Muffins produziert. Was ist zum Beispiel mit Zimtsternen? Ist es dafür geeignet? Kann unser Programm auch Zimtsterne \"berechnen\"? Dabei wäre es wichtig zu wissen, ob das Produkt, die Muffins oder die Zimtsterne, eher groß oder eher klein geraten. Schließlich wollen wir auch erfahren in welcher Zeit die Muffins \"berechnet\" oder fertig werden.\n::: \n\nDie **Theorien der Programmiersprachen** behandeln die Art und Weise, wie wir Computern etwas mitteilen. Ein **Compiler** ist eine Software, die eine Programmiersprache in ein andere umwandelt; wir können sie grob als Übersetzer bezeichnen. Viele Compiler übersetzen Programmiersprachen in Maschinensprache; diejenige Sprache, die von den integrierten Schaltungen verstanden wird. Die **Compilertheorien** ermöglichen das Design solcher Übersetzer.\n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Programmiersprachen (wie schreiben wir es auf?) und Compiler (wie können wir es übersetzen?) beim Muffinbacken\" collapse=\"true\"}\nDie Programmiersprache legt die Art und Weise fest, mit der wir Zutaten und Zubereitung beschreiben. Der Compiler kann uns zum Beispiel helfen, das Rezept aus dem englischen in Brailleschrift zu übersetzen. \n::: \n\n### Anwendungsbezogene Felder \n\nDie **Computerarchitektur** beschäftigt sich mit dem Design und der Optimierung von Computersystemen und deren Betriebssysteme. Darunter fallen auch **gleichzeitig, parallel und verteilt arbeitende Systeme** und deren besonderer Eigenschaften. Computersysteme wollen miteinander sprechen und dafür braucht man Leitungen, spezielle Sprachen für die Informationsübertragung und eine gewisse Sicherheit gegenüber schädlichen Einflüssen. Diese Überlegungen finden eine Heimat in den Fachgebieten **Vernetzung**, **Netzwerktechnik**, **Verschlüsselung** und der **Cybersicherheit**. \n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Computerarchitektur (wie richten wir die Küche ein?), Betriebssystem (das ist der Koch) Verarbeitungsart (gleichzeitig, parallel, oder nacheinander?), Kommunikationstechnik (wie und was teilen wir anderen mit?) und Cybersicherheit (wie halten wir das Rezept geheim?) in der Muffinwelt\" collapse=\"true\"}\nDie Computerarchitektur hilft uns, unsere Küche so zu planen und einzurichten, dass wir möglichst effizient arbeiten. Dabei können mehrere Teilschritte entweder gleichzeitig, parallel oder nacheinander ausgeführt werden. Die Netzwerk- und Kommunikationstechnik ist unser Küchentelefon, mit dem wir Zutaten bestellen, falls sie zur Neige gehen. Dabei achtet die Cybersicherheit darauf, dass keiner mithört und uns das Rezept stiehlt. \n::: \n\nFür die visuelle Darstellung ist das Feld der **Computergrafik** zuständig. Sie spielt eine außerordentlich wichtige Rolle beim zocken. Eine weiterer Aspekt ist die Speicherung von Daten in **Datenbanken**. Deren Zuverlässigkeit und Robustheit ist in der heutigen Welt fast noch wichtiger als die Grafik. \n\n::: {#fig-game-graphics}\n![](img/samsung-memory-Tu8F7ojdiEo-unsplash.jpg){width=75%}\n\nComputergrafik spielt bei Computerspielen eine enorm große Rolle. Die Verfahren, die hier eingesetzt werden sind über Jahrzehnte entwickelt worden und besitzen einen hohen mathematischen Anteil.\n:::\n\nDie Umsetzung **wissenschaftlicher Berechnungen** sind ebenfalls Teil der Informatik. Sie hat in den letzten Jahrzehnten gerade in der Biologie eine zunehmende Bedeutung erfahren. Zu guter Letzt bleibt das aktuelle Thema übrig: **künstlichen Intelligenz**. In der Informatik wird seit etwa 50 Jahren and der Automatisierung des Lernens und der Wiedergabe des Erlernten geforscht. Die heutigen sehr ineffizienten Systeme sind unter sehr großem Aufwand entstanden und haben enorm viel Kapital gebunden. Es bleibt abzuwarten, ob diese Art der KI die Weltwirtschaft nachhaltig vergrößert.  \n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Computergrafik (wie stelle ich was dar?), Datenbanken (eine Schublade voller geordneter Rezepte), wissenschaftliche Berechnungen (können wir es herausfinden und vorhersagen?), künstliche Intelligenz (kann mich der Herd unterstützen?) in Muffinhausen\" collapse=\"true\"}\nDie Computergrafik zeigt Dir tolle dreidimensionale Muffinmodelle. Die Datenbank benutzen wir, um die Zutaten in einem älteren Muffinrezept einzusehen. Wir machen mithilfe von wissenschaftlichen Berechnungen eine Vorhersage über die Backzeit nachdem wir die Daten des älteren Rezeptes in ein Backmodell eingefügt haben. Die künstliche Intelligenz liegt manchmal daneben bei der Interpretation von vorhandenen Rezepten. Sie klingt aber immer so sicher, dass wir ihr fast Glauben schenken. Sie zeigt auch recht wenig Innovation bei der Erfindung neuer Rezepte. Aber wir stellen zufrieden fest, dass sie kleine Abwandlungen unseres Muffinrezeptes durchaus auf die Reihe kriegt. \n::: \n\nÜber viele dieser Gebiete thront die **Softwaretechnik**, wenn es zur Umsetzung kommt. Sie ist maßgeblich an der Entstehung komplexer Softwaresystemen mit Zehntausenden bis Millionen Zeilen Code beteiligt. Es haben sich verschieden Ansichten und Richtungen in diesem Bereich gebildet. Das ist ein Zeichen dafür, dass Softwaretechnik sich an die Gegebenheiten anpassen kann. \n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Softwaretechnik (wie plane ich ein neues Rezept?) im Zeichen des Muffins\" collapse=\"true\"}\nSoftwaretechnik diszipliniert uns bei der Erstellung neuer Rezepte. Aber es ist durchaus schwer verdientes Geld, denn dafür musste der Koch in einem Sternerestaurant mit Anspruch angelernt werden. Darüberhinaus, wird jeder Schritt in unserer Küche penibel dokumentiert. Wir zweifeln manchmal daran, ob der Aufwand dem Ziel gerecht wird.  \n::: \n\n## Was wollen wir in Stufe 9 tun?\n\nIn diesem Jahr wendet ihr euch einer professionelleren Arbeitsweise in der Informatik zu. Die Hauptarbeit ist Teil der praktischen Informatik: **Programmieren**. Davor richtet jeder von euch die notwendige Infrastruktur ein: **Quellcodemanagement**.\n\n### Quellcodemanagement\n\nÄhnlich wie ein Haus konzipiert und gebaut wird, wird auch moderne Software mithilfe von Architektur, Verwaltung der Planung und Planungsvorlagen, Bauvorschriften, und anderen Aspekten hergestellt. Dabei ist es wichtig, dass Pläne ständig angepasst und aktualisiert werden.\n\nDiese Arbeitsweise hat sich in allen Ingenieurswissenschaften durchgesetzt; und so auch in der Softwaretechnik. Im Grunde genommen, besteht alle Software am Anfang aus einer recht großen Menge von Textdateien. Die händische Kontrolle von Änderungen, Speicherorten, Produktionszuführung wäre alleine bei einer einzigen Datei mühsam, und vor allem fehleranfällig. \n\nDeshalb werden wir ein Quellcodemanagementsystem einrichten, in dem ihr eure gesamte Programmierarbeit ausführt. Das sollten wir in den ersten drei Wochen des ersten Halbjahres abschliessen, wenn wir die Englandfahrt dazurechnen. \n\n### Programmieren\n\nProgrammieren war noch vor wenigen Jahrzehnten eine Tätigkeit, die auf einem einzelnen Computer und mithilfe einer einzigen Programmiersprache erfolgte. Das moderne Programmieren ist nunmehr zum **Entwickeln** geworden, weil Software aus verschiedenen Modulen mit unterschiedlichsten Funktionen und unterschiedlichen Programmiersprachen in komplexen Prozessen gebaut wird.\n\nEin gutes Lernfeld für diese komplexe Entwicklungsarbeit sind moderne Webseiten. Diese vereinen drei unterschiedliche Programmiersprachen und mehrere Technologien. Wir werden uns mit der Herstellung statischer Webseiten befassen, deren Funktionalität auf dem Browser des Clientcomputers ermöglicht wird. Der grobe Plan ist ungefähr so:\n\n#. Du lernst zuerst HTML kennen\n#. Danach bringen wir CSS ins Spiel\n#. Schließlich kommt ECMAScript, auch Javascript genannt, dazu\n#. Danach implementieren wir Multimedia \n#. Nun ist die Zeit reif für Modularität: Programmierbibliotheken und Frameworks werden Deine Entwicklungsarbeit beschleunigen\n#. Gegen Schluss vereinfachen wir weiter mit Markdown Sprachen\n#. Zum Schluss gibt es ein Teamprojekt\n\nWir bewegen uns dabei von den Grundlagen zu immer höheren **Abstraktionsebenen**. Die Grundlagen sind einfach und simpel aber komplizierte Aufgaben lassen sich damit nur mühsam lösen. Wenn das passiert, werden wir einen Gangwechsel betreiben und auf Module zurückgreifen, die viele dieser mühsamen Schritte erleichtern.  \n\n## Arbeitsaufträge\n\n### Fachwissen\n\n### Einrichtung des Quellcodemanagements\n\nDazu werden wir folgendes machen müssen:\n\n#. Zuerst stellen wir fest, daß unsere Schulemail funktioniert\n#. Danach richtet ihr ein GitHub Konto an\n#. Nun erfolgt eine Einladung zur Mitarbeit in eure private Codedatenbank innerhalb unserer Entwicklungsorganisation; diese akzeptiert ihr\n#. Innerhalb der Datenbank erhaltet ihr die Arbeitsaufträge\n#. Eure Bearbeitung der Aufträge löst eine Kaskade vonProzessen im Hintergrund aus, die zum Bau einer Webseite führt; diese werdet ihr sehen können \n#. Die Einladungen erfolgen nach jeder Einführung, weil jedes Thema samt seiner Arbeitsaufträge in eine eigene Codedatenbank untergebracht wird.\n#. Für die Teamarbeit werden wir die Programmierorganisation wechseln, da ihr dort andere Randbedingungen antreffen werdet.\n\nFür die oben genannten Punkte, werdet ihr adäquate Anleitungen bekommen, wo es notwendig ist. Für diese Einrichtung rechnen wir mit etwa drei Wochen; wenn wir die Englandfahrt mitrechnen.\n\n","srcMarkdownNoYaml":"\n\n## Was ist Informatik?\n\nDie Informatik beschäftigt sich mit Fragestellungen und Lösungen rund um Information, Daten, und Berechenbarkeit als auch mit deren Konzeption, Bau, Implementierung und Anwendung in und als **Computer** und **Computersystemen**. Vor der Erfindung des digitalen Computers, waren Computer für Jahrhunderte meistens als Frauen bekannt, die mathematische Berechnungen ausführten. \n\n::: {#fig-women-computers}\n\n![](img/women_computers.jpg)\n\nVor der Markteinführung von kommerziell erhältlichen digitalen Computern, waren hauptsächlich Frauen damit beschäftigt, mehr oder weniger komplexe mathematische Berechnungen auszuführen. Diese Frauen haben durch ihre Arbeit maßgeblich zu vielen Errungenschaften beigetragen.\n:::\n\n### Gebiete der Informatik \n\nDas Fach Informatik deckt viele und teilweise sehr unterschiedliche Gebiete ab. Wir werden nicht ins Detail gehen aber eine Übersicht kann nie schaden. Um die verschiedenen Gebiete und deren Bedeutung zu verdeutlichen, werden wir die Umsetzung eines Muffinrezeptes als Beispiel verwenden. Dazu verwenden wir abgesetzte klappbare Textblöcke wie den folgenden, in dem die Anwendung von Fachbegriffen anhand des Rezeptes und der dazugehörigen Prozessen verdeutlicht wird. Die Erklärung wird durch Ausklappen sichtbar. \n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Verstehe etwas durch das Muffinrezept und klapp mich auf!\" collapse=\"true\"}\nHier wirst Du immer eine Erklärung zu Fachbegriffen vorfinden, die sich auf das Muffinbacken bezieht. Wir fangen gleich damit an. Das Muffinrezept ist nämlich ein Computerprogramm, die Küche ein Computer und Du bist der Koch. Was Du bist wird in einem späteren Textblock klar. \n:::\n\n### Grundlagen\n\nInformatik ist in weiten Teilen angewandte **Mathematik**. Deshalb sind mathematische Grundlagen wie Logik, Zahlentheorie, Graphentheorie, und andere Gebiete wichtige Bausteine. Auf ihnen werden **Algorithmen** und **Datenstrukturen** aufgebaut. Dies sind die Grundelemente der Berechenbarkeit. \n\n::: {#fig-khwarizmi}\n![](img/khwarizmi_algebra.jpg){width=30%}\n\nDas Wort *Algorithmus* ist von dem Namen des persischen Mathematikers Muḥammad ibn Mūsā al-Khwārizmī, محمد بن موسى الخوارزميّ‎, * ~780 † ~830, abgeleitet. Er hat die ersten algebraischen Rechenvorschriften in das indische Zahlensystem übertragen und beschrieben. Gezeigt ist hier eine Seite aus seinem Algebrawerk.\n:::\n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Datenstrukturen (was kommt rein?) und Algorithmen (wie machen wir es?) mit Muffins\" collapse=\"true\"}\nDas Computerprogramm besteht aus der Datenstruktur Zutaten (engl. *ingridients*) und dem Algorithmus Zubereitung (engl. *instructions*). Wir brauchen beide Elemente, damit wir *diese* Muffins herstellen können.\n\n::: {layout-ncol=2}\n![](img/muffin_data.png){width=50%}\n\n![](img/muffin_algorithm.png){width=50%}\n:::\n:::\n\n### Grundbausteine\n\nDie **Theorien von Berechenbarkeit** ermitteln inwiefern Algorithmen bestimmte Probleme lösen können. Dabei wird die Lösungsgenauigkeit und die Effizienz der Algorithmen untersucht. \n\n::: {#fig-turing}\n![](img/alan_turing_header.jpg){width=30%}\n\nAlan Turing, * 1912 † 1954, war ein englischer Mathematiker, der sich als Erster über Berechenbarkeit Gedanken gemacht hat. Er hat dann ein Berechnungssystem erfunden, dass der Funktionsweise des modernen Computers entspricht.\n:::\n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Berechenbarkeit (können wir es machen?), Lösungsgenauigkeit (wie gut wird es?) und Effizienz (wie schnell wird es fertig und wie viel Energie stecken wir rein?) beim Muffinbacken\" collapse=\"true\"}\nBei der Berechenbarkeit mithilfe unseres Computerprogramms, dem Muffinrezept, kann man erfragen, ob es nur Muffins produziert. Was ist zum Beispiel mit Zimtsternen? Ist es dafür geeignet? Kann unser Programm auch Zimtsterne \"berechnen\"? Dabei wäre es wichtig zu wissen, ob das Produkt, die Muffins oder die Zimtsterne, eher groß oder eher klein geraten. Schließlich wollen wir auch erfahren in welcher Zeit die Muffins \"berechnet\" oder fertig werden.\n::: \n\nDie **Theorien der Programmiersprachen** behandeln die Art und Weise, wie wir Computern etwas mitteilen. Ein **Compiler** ist eine Software, die eine Programmiersprache in ein andere umwandelt; wir können sie grob als Übersetzer bezeichnen. Viele Compiler übersetzen Programmiersprachen in Maschinensprache; diejenige Sprache, die von den integrierten Schaltungen verstanden wird. Die **Compilertheorien** ermöglichen das Design solcher Übersetzer.\n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Programmiersprachen (wie schreiben wir es auf?) und Compiler (wie können wir es übersetzen?) beim Muffinbacken\" collapse=\"true\"}\nDie Programmiersprache legt die Art und Weise fest, mit der wir Zutaten und Zubereitung beschreiben. Der Compiler kann uns zum Beispiel helfen, das Rezept aus dem englischen in Brailleschrift zu übersetzen. \n::: \n\n### Anwendungsbezogene Felder \n\nDie **Computerarchitektur** beschäftigt sich mit dem Design und der Optimierung von Computersystemen und deren Betriebssysteme. Darunter fallen auch **gleichzeitig, parallel und verteilt arbeitende Systeme** und deren besonderer Eigenschaften. Computersysteme wollen miteinander sprechen und dafür braucht man Leitungen, spezielle Sprachen für die Informationsübertragung und eine gewisse Sicherheit gegenüber schädlichen Einflüssen. Diese Überlegungen finden eine Heimat in den Fachgebieten **Vernetzung**, **Netzwerktechnik**, **Verschlüsselung** und der **Cybersicherheit**. \n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Computerarchitektur (wie richten wir die Küche ein?), Betriebssystem (das ist der Koch) Verarbeitungsart (gleichzeitig, parallel, oder nacheinander?), Kommunikationstechnik (wie und was teilen wir anderen mit?) und Cybersicherheit (wie halten wir das Rezept geheim?) in der Muffinwelt\" collapse=\"true\"}\nDie Computerarchitektur hilft uns, unsere Küche so zu planen und einzurichten, dass wir möglichst effizient arbeiten. Dabei können mehrere Teilschritte entweder gleichzeitig, parallel oder nacheinander ausgeführt werden. Die Netzwerk- und Kommunikationstechnik ist unser Küchentelefon, mit dem wir Zutaten bestellen, falls sie zur Neige gehen. Dabei achtet die Cybersicherheit darauf, dass keiner mithört und uns das Rezept stiehlt. \n::: \n\nFür die visuelle Darstellung ist das Feld der **Computergrafik** zuständig. Sie spielt eine außerordentlich wichtige Rolle beim zocken. Eine weiterer Aspekt ist die Speicherung von Daten in **Datenbanken**. Deren Zuverlässigkeit und Robustheit ist in der heutigen Welt fast noch wichtiger als die Grafik. \n\n::: {#fig-game-graphics}\n![](img/samsung-memory-Tu8F7ojdiEo-unsplash.jpg){width=75%}\n\nComputergrafik spielt bei Computerspielen eine enorm große Rolle. Die Verfahren, die hier eingesetzt werden sind über Jahrzehnte entwickelt worden und besitzen einen hohen mathematischen Anteil.\n:::\n\nDie Umsetzung **wissenschaftlicher Berechnungen** sind ebenfalls Teil der Informatik. Sie hat in den letzten Jahrzehnten gerade in der Biologie eine zunehmende Bedeutung erfahren. Zu guter Letzt bleibt das aktuelle Thema übrig: **künstlichen Intelligenz**. In der Informatik wird seit etwa 50 Jahren and der Automatisierung des Lernens und der Wiedergabe des Erlernten geforscht. Die heutigen sehr ineffizienten Systeme sind unter sehr großem Aufwand entstanden und haben enorm viel Kapital gebunden. Es bleibt abzuwarten, ob diese Art der KI die Weltwirtschaft nachhaltig vergrößert.  \n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Computergrafik (wie stelle ich was dar?), Datenbanken (eine Schublade voller geordneter Rezepte), wissenschaftliche Berechnungen (können wir es herausfinden und vorhersagen?), künstliche Intelligenz (kann mich der Herd unterstützen?) in Muffinhausen\" collapse=\"true\"}\nDie Computergrafik zeigt Dir tolle dreidimensionale Muffinmodelle. Die Datenbank benutzen wir, um die Zutaten in einem älteren Muffinrezept einzusehen. Wir machen mithilfe von wissenschaftlichen Berechnungen eine Vorhersage über die Backzeit nachdem wir die Daten des älteren Rezeptes in ein Backmodell eingefügt haben. Die künstliche Intelligenz liegt manchmal daneben bei der Interpretation von vorhandenen Rezepten. Sie klingt aber immer so sicher, dass wir ihr fast Glauben schenken. Sie zeigt auch recht wenig Innovation bei der Erfindung neuer Rezepte. Aber wir stellen zufrieden fest, dass sie kleine Abwandlungen unseres Muffinrezeptes durchaus auf die Reihe kriegt. \n::: \n\nÜber viele dieser Gebiete thront die **Softwaretechnik**, wenn es zur Umsetzung kommt. Sie ist maßgeblich an der Entstehung komplexer Softwaresystemen mit Zehntausenden bis Millionen Zeilen Code beteiligt. Es haben sich verschieden Ansichten und Richtungen in diesem Bereich gebildet. Das ist ein Zeichen dafür, dass Softwaretechnik sich an die Gegebenheiten anpassen kann. \n\n::: {.callout-note title=\"![](img/mdi--muffin.png){.baseline-centered-image width=24px} Softwaretechnik (wie plane ich ein neues Rezept?) im Zeichen des Muffins\" collapse=\"true\"}\nSoftwaretechnik diszipliniert uns bei der Erstellung neuer Rezepte. Aber es ist durchaus schwer verdientes Geld, denn dafür musste der Koch in einem Sternerestaurant mit Anspruch angelernt werden. Darüberhinaus, wird jeder Schritt in unserer Küche penibel dokumentiert. Wir zweifeln manchmal daran, ob der Aufwand dem Ziel gerecht wird.  \n::: \n\n## Was wollen wir in Stufe 9 tun?\n\nIn diesem Jahr wendet ihr euch einer professionelleren Arbeitsweise in der Informatik zu. Die Hauptarbeit ist Teil der praktischen Informatik: **Programmieren**. Davor richtet jeder von euch die notwendige Infrastruktur ein: **Quellcodemanagement**.\n\n### Quellcodemanagement\n\nÄhnlich wie ein Haus konzipiert und gebaut wird, wird auch moderne Software mithilfe von Architektur, Verwaltung der Planung und Planungsvorlagen, Bauvorschriften, und anderen Aspekten hergestellt. Dabei ist es wichtig, dass Pläne ständig angepasst und aktualisiert werden.\n\nDiese Arbeitsweise hat sich in allen Ingenieurswissenschaften durchgesetzt; und so auch in der Softwaretechnik. Im Grunde genommen, besteht alle Software am Anfang aus einer recht großen Menge von Textdateien. Die händische Kontrolle von Änderungen, Speicherorten, Produktionszuführung wäre alleine bei einer einzigen Datei mühsam, und vor allem fehleranfällig. \n\nDeshalb werden wir ein Quellcodemanagementsystem einrichten, in dem ihr eure gesamte Programmierarbeit ausführt. Das sollten wir in den ersten drei Wochen des ersten Halbjahres abschliessen, wenn wir die Englandfahrt dazurechnen. \n\n### Programmieren\n\nProgrammieren war noch vor wenigen Jahrzehnten eine Tätigkeit, die auf einem einzelnen Computer und mithilfe einer einzigen Programmiersprache erfolgte. Das moderne Programmieren ist nunmehr zum **Entwickeln** geworden, weil Software aus verschiedenen Modulen mit unterschiedlichsten Funktionen und unterschiedlichen Programmiersprachen in komplexen Prozessen gebaut wird.\n\nEin gutes Lernfeld für diese komplexe Entwicklungsarbeit sind moderne Webseiten. Diese vereinen drei unterschiedliche Programmiersprachen und mehrere Technologien. Wir werden uns mit der Herstellung statischer Webseiten befassen, deren Funktionalität auf dem Browser des Clientcomputers ermöglicht wird. Der grobe Plan ist ungefähr so:\n\n#. Du lernst zuerst HTML kennen\n#. Danach bringen wir CSS ins Spiel\n#. Schließlich kommt ECMAScript, auch Javascript genannt, dazu\n#. Danach implementieren wir Multimedia \n#. Nun ist die Zeit reif für Modularität: Programmierbibliotheken und Frameworks werden Deine Entwicklungsarbeit beschleunigen\n#. Gegen Schluss vereinfachen wir weiter mit Markdown Sprachen\n#. Zum Schluss gibt es ein Teamprojekt\n\nWir bewegen uns dabei von den Grundlagen zu immer höheren **Abstraktionsebenen**. Die Grundlagen sind einfach und simpel aber komplizierte Aufgaben lassen sich damit nur mühsam lösen. Wenn das passiert, werden wir einen Gangwechsel betreiben und auf Module zurückgreifen, die viele dieser mühsamen Schritte erleichtern.  \n\n## Arbeitsaufträge\n\n### Fachwissen\n\n### Einrichtung des Quellcodemanagements\n\nDazu werden wir folgendes machen müssen:\n\n#. Zuerst stellen wir fest, daß unsere Schulemail funktioniert\n#. Danach richtet ihr ein GitHub Konto an\n#. Nun erfolgt eine Einladung zur Mitarbeit in eure private Codedatenbank innerhalb unserer Entwicklungsorganisation; diese akzeptiert ihr\n#. Innerhalb der Datenbank erhaltet ihr die Arbeitsaufträge\n#. Eure Bearbeitung der Aufträge löst eine Kaskade vonProzessen im Hintergrund aus, die zum Bau einer Webseite führt; diese werdet ihr sehen können \n#. Die Einladungen erfolgen nach jeder Einführung, weil jedes Thema samt seiner Arbeitsaufträge in eine eigene Codedatenbank untergebracht wird.\n#. Für die Teamarbeit werden wir die Programmierorganisation wechseln, da ihr dort andere Randbedingungen antreffen werdet.\n\nFür die oben genannten Punkte, werdet ihr adäquate Anleitungen bekommen, wo es notwendig ist. Für diese Einrichtung rechnen wir mit etwa drei Wochen; wenn wir die Englandfahrt mitrechnen.\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"brand":{"light":{"data":{"meta":{"name":{"full":"Montessori Gemeinschaftsschule Saar","short":"MGS"},"link":{"home":"https://montessori-sb.de/"},"description":"Die Montessori Gemeinschaftsschule Saar arbeitet als Reformschule im gebundenen Ganztagsschulbetrieb. Wir sind eine staatlich anerkannte Ersatzschule in privater Trägerschaft. Schüler*innen können bei uns ab der 5. Klasse lernen und alle im Saarland vorgesehenen Schulabschlüsse erwerben. Wir orientieren uns an den Lehrplänen und den jeweils gültigen Verordnungen für Gemeinschaftsschulen im Saarland.","founded":2007},"logo":{"small":"style/mgss_symbol_color.png","medium":"style/mgss_symbol_color.png","large":"style/mgss_symbol_color.svg"},"color":{"palette":{"ivory":"#F4F4E7","dark-grey":"#222222","mid-grey":"#3F3F3F","light-grey":"#5C6064","light-blue":"#4d8ac2","jasper":"#D44D39","pear":"#D9E150","dim-grey":"#5D6165"},"foreground":"dark-grey","background":"ivory","primary":"mid-grey","secondary":"light-grey","tertiary":"dim-grey"},"typography":{"fonts":[{"family":"Oxanium","source":"bunny"},{"family":"Crimson Pro","source":"bunny"},{"family":"Fraunces","source":"bunny"}],"base":{"family":"Fraunces"},"headings":{"family":"Oxanium","color":"mid-grey"},"link":{"color":"light-blue"}},"defaults":{"bootstrap":{"defaults":{"enable-rounded":false,"code-block-bg":"#F4F4E7","code-block-border-left":true,"callout-color-note":"#3F3F3F"}}}},"brandDir":"/home/gumbo/Scoala/computer_science/grade_9/grade_9_plan_intro/style","projectDir":"/home/gumbo/Scoala/computer_science/grade_9/grade_9_plan_intro","processedData":{"color":{"ivory":"#F4F4E7","dark-grey":"#222222","mid-grey":"#3F3F3F","light-grey":"#5C6064","light-blue":"#4d8ac2","jasper":"#D44D39","pear":"#D9E150","dim-grey":"#5D6165","foreground":"#222222","background":"#F4F4E7","primary":"#3F3F3F","secondary":"#5C6064","tertiary":"#5D6165"},"typography":{"base":{"family":"Fraunces"},"headings":{"family":"Oxanium","color":"mid-grey"},"link":{"color":"light-blue"}},"logo":{"images":{},"small":{"path":"style/mgss_symbol_color.png"},"medium":{"path":"style/mgss_symbol_color.png"},"large":{"path":"style/mgss_symbol_color.svg"}}},"brand":{"meta":{"name":{"full":"Montessori Gemeinschaftsschule Saar","short":"MGS"},"link":{"home":"https://montessori-sb.de/"},"description":"Die Montessori Gemeinschaftsschule Saar arbeitet als Reformschule im gebundenen Ganztagsschulbetrieb. Wir sind eine staatlich anerkannte Ersatzschule in privater Trägerschaft. Schüler*innen können bei uns ab der 5. Klasse lernen und alle im Saarland vorgesehenen Schulabschlüsse erwerben. Wir orientieren uns an den Lehrplänen und den jeweils gültigen Verordnungen für Gemeinschaftsschulen im Saarland.","founded":2007},"color":{"palette":{"ivory":"#F4F4E7","dark-grey":"#222222","mid-grey":"#3F3F3F","light-grey":"#5C6064","light-blue":"#4d8ac2","jasper":"#D44D39","pear":"#D9E150","dim-grey":"#5D6165"},"foreground":"dark-grey","background":"ivory","primary":"mid-grey","secondary":"light-grey","tertiary":"dim-grey"},"typography":{"fonts":[{"family":"Oxanium","source":"bunny"},{"family":"Crimson Pro","source":"bunny"},{"family":"Fraunces","source":"bunny"}],"base":{"family":"Fraunces"},"headings":{"family":"Oxanium","color":"mid-grey"},"link":{"color":"light-blue"}},"logo":{"small":"style/mgss_symbol_color.png","medium":"style/mgss_symbol_color.png","large":"style/mgss_symbol_color.svg"},"defaults":{"bootstrap":{"defaults":{"enable-rounded":false,"code-block-bg":"#F4F4E7","code-block-border-left":true,"callout-color-note":"#3F3F3F"}}}}}}},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["highlight-text"],"css":["style/style.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Inhaltsverzeichnis","toc-title-website":"Auf dieser Seite","related-formats-title":"Andere Formate","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Quelle","other-links-title":"Weitere Links","code-links-title":"Code-Links","launch-dev-container-title":"Dev Container starten","launch-binder-title":"Binder starten","article-notebook-label":"Artikel-Notizbuch","notebook-preview-download":"Notizbuch herunterladen","notebook-preview-download-src":"Quellcode herunterladen","notebook-preview-back":"Zurück zum Artikel","manuscript-meca-bundle":"MECA-Archiv","section-title-abstract":"Zusammenfassung","section-title-appendices":"Anhang","section-title-footnotes":"Fußnoten","section-title-references":"Literatur","section-title-reuse":"Wiederverwendung","section-title-copyright":"Urheberrechte","section-title-citation":"Zitat","appendix-attribution-cite-as":"Bitte zitieren Sie diese Arbeit als:","appendix-attribution-bibtex":"Mit BibTeX zitieren:","appendix-view-license":"Lizenz Anzeigen","title-block-author-single":"Autor:in","title-block-author-plural":"Autor:innen","title-block-affiliation-single":"Zugehörigkeit","title-block-affiliation-plural":"Zugehörigkeiten","title-block-published":"Veröffentlichungsdatum","title-block-modified":"Geändert","title-block-keywords":"Schlüsselwörter","callout-tip-title":"Tipp","callout-note-title":"Hinweis","callout-warning-title":"Warnung","callout-important-title":"Wichtig","callout-caution-title":"Vorsicht","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Gesamten Code zeigen","code-tools-hide-all-code":"Gesamten Code verbergen","code-tools-view-source":"Quellcode anzeigen","code-tools-source-code":"Quellcode","tools-share":"Share","tools-download":"Download","code-line":"Zeile","code-lines":"Zeilen","copy-button-tooltip":"In die Zwischenablage kopieren","copy-button-tooltip-success":"Kopiert","repo-action-links-edit":"Seite editieren","repo-action-links-source":"Quellcode anzeigen","repo-action-links-issue":"Problem melden","back-to-top":"Zurück nach oben","search-no-results-text":"Keine Treffer","search-matching-documents-text":"Treffer","search-copy-link-title":"Link in die Suche kopieren","search-hide-matches-text":"Zusätzliche Treffer verbergen","search-more-match-text":"weitere Treffer in diesem Dokument","search-more-matches-text":"weitere Treffer in diesem Dokument","search-clear-button-title":"Zurücksetzen","search-text-placeholder":"","search-detached-cancel-button-title":"Abbrechen","search-submit-button-title":"Abschicken","search-label":"Suchen","toggle-section":"Abschnitt umschalten","toggle-sidebar":"Seitenleiste umschalten","toggle-dark-mode":"Dunkelmodus umschalten","toggle-reader-mode":"Lesemodus umschalten","toggle-navigation":"Navigation umschalten","crossref-fig-title":"Abbildung","crossref-tbl-title":"Tabelle","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Korollar","crossref-prp-title":"Aussage","crossref-cnj-title":"Annahme","crossref-def-title":"Definition","crossref-exm-title":"Beispiel","crossref-exr-title":"Übungsaufgabe","crossref-ch-prefix":"Kapitel","crossref-apx-prefix":"Anhang","crossref-sec-prefix":"Kapitel","crossref-eq-prefix":"Gleichung","crossref-lof-title":"Abbildungsverzeichnis","crossref-lot-title":"Tabellenverzeichnis","crossref-lol-title":"Listingverzeichnis","environment-proof-title":"Beweis","environment-remark-title":"Anmerkung","environment-solution-title":"Lösung","listing-page-order-by":"Sortieren nach","listing-page-order-by-default":"Voreinstellung","listing-page-order-by-date-asc":"Datum (aufsteigend)","listing-page-order-by-date-desc":"Neueste","listing-page-order-by-number-desc":"Absteigend","listing-page-order-by-number-asc":"Aufsteigend","listing-page-field-date":"Datum","listing-page-field-title":"Titel","listing-page-field-description":"Beschreibung","listing-page-field-author":"Autor:in","listing-page-field-filename":"Dateiname","listing-page-field-filemodified":"Geändert","listing-page-field-subtitle":"Untertitel","listing-page-field-readingtime":"Lesezeit","listing-page-field-wordcount":"Wortanzahl","listing-page-field-categories":"Kategorien","listing-page-minutes-compact":"{0} min","listing-page-category-all":"alle","listing-page-no-matches":"Keine Treffer","listing-page-words":"{0} Wörter","listing-page-filter":"Filter","draft":"Entwurf"},"metadata":{"lang":"de","fig-responsive":true,"quarto-version":"1.8.19","title":"<p>![](style/mgmss_brand_color.png){width=40px}</p>\nPlan für Informatik in Stufe 9\n","subtitle":"Einführung mit Aufgaben <br>\n<br>\nEinführung: 2025-08-25 <br>\nAbgabetermin: 2025-09-15 (Doppelrohr bei Nichteinreichen am Termin)\n","date":"2025-08-26","date-modified":"2025-08-26","author":"Călin Drăgan","abstract":"Hier bekommst Du eine Übersicht über die fachlichen und praktischen Arbeiten, die in Informatik in Stufe 9 geplant sind. Die anschliessenden Aufgaben helfen Dir, Dich an einige Fachbegriffe anzunähern.","title-block-banner":true,"brand":"style/_brand.yml","toc-location":"right","appendix-style":"default","callout-appearance":"default","callout-icon":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}